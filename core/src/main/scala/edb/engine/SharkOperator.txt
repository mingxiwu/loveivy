Operator.scala
================

Operator class
-----------------
-initializeOnMaster(): recursively invoke initializeOnMaster for all its parent operators.
-initializeOnSlave(): no dependency on other nodes. 
-processPartition(): process all records in a given split. It returns a iterator of records.
-execute(): this recursively execute parent operator. It returns a RDD.
-initializeMasterOnAll(): recursively init operator tree. Parent operator are called first. ???
-getTag: join tag.
-childOperators
-parentOperators
-returnTerminalOperators: Seq[Operator[_]] . This returns leaf node operator. Parent is the higher node in operator tree
-executeParents: invoke parent operators
-addObjectInspector: to a sequence of OIs.

Operator object
----------------
- executeProcessPartition(operator: Operator[_ <: HiveOperator], rdd: RDD[_]): for each partition(split), it calls operator.processPartition() function. It supply the operator.prcoessPartition as a function to rdd.mapPartitionsWithIndex, will give a new RDD with the original input RDD's split preserved.


NaryOperator class extends Operator
------------------------------------
has many parents and one child. Can be used to implement Join, Union etc.

- combineMultipleRdds: combine multiple RDDs to one RDD. Can be used to implement join.
- processPartition: Called on each slave on the output of combineMultipleRdds. This can be used to transform rows into their desired format.
- postprocessRdd: Called on the master to transform the output of processPartition before sending it downstream.???
How the master interactive with it's slave? Are they single operator?

UnaryOperator extends Operator
----------------------------------
A base operator class that has at most one parent.

TopOperator extends UnaryOperator
----------------------------------

